---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "incident-bot.fullname" . }}
  labels:
    {{- include "incident-bot.labels" . | nindent 4 }}
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ default 1 .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "incident-bot.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "incident-bot.selectorLabels" . | nindent 8 }}
        {{- if .Values.extraPodLabels }}
        {{- toYaml .Values.extraPodLabels | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "incident-bot.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.init.enabled }}
      initContainers:
        - name: wait-for-db
          image: busybox:latest
          command: ['sh', '-c', 'echo -e "Waiting for database $POSTGRES_HOST $POSTGRES_PORT"; while ! nc -z $POSTGRES_HOST $POSTGRES_PORT; do sleep 1; printf "-"; done; echo -e "  >> Database is reachable";']
          {{- if and .Values.envFromSecret.enabled (not (empty .Values.envFromSecret.secretName)) }}
          envFrom:
            - secretRef:
                name: {{ .Values.envFromSecret.secretName }}
          {{- end }}
        - name: db-migrations
          image: {{ include "incident-bot.util-image.rendered" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- with .Values.init.args }}
          args:
            {{- . | toYaml | nindent 12 }}
          {{- end }}
          {{- with .Values.init.command }}
          command:
            {{- . | toYaml | nindent 12 }}
          {{- end }}
          {{- if and .Values.envFromSecret.enabled (not (empty .Values.envFromSecret.secretName)) }}
          envFrom:
            - secretRef:
                name: {{ .Values.envFromSecret.secretName }}
          {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ include "incident-bot.image.rendered" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.args }}
          args:
            {{- . | toYaml | nindent 12 }}
          {{- end }}
          {{- with .Values.command }}
          command:
            {{- . | toYaml | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- if (or (.Values.envVars) (.Values.configMap.create) ) }}
          env:
            {{- if .Values.configMap.create }}
            - name: CONFIG_FILE_PATH
              value: /config/{{ include "incident-bot.fullname" . }}/config.yaml
            {{- end }}
          {{- include "incident-bot.envVars.rendered" (list . .Values) | indent 12 }}
          {{- end }}
          {{- if and .Values.envFromSecret.enabled (not (empty .Values.envFromSecret.secretName)) }}
          envFrom:
            - secretRef:
                name: {{ .Values.envFromSecret.secretName }}
          {{- end }}
          {{- if .Values.healthCheck.enabled }}
          {{- with .Values.healthCheck }}
          livenessProbe:
            httpGet:
              path: {{ .path }}
              port: {{ $.Values.service.port }}
              scheme: {{ .scheme | default "HTTP" }}
            initialDelaySeconds: {{ .initialDelaySeconds | default 30 }}
            periodSeconds: {{ .periodSeconds | default 30 }}
            timeoutSeconds: {{ .timeoutSeconds | default 1 }}
          readinessProbe:
            httpGet:
              path: {{ .path }}
              port: {{ $.Values.service.port }}
              scheme: {{ .scheme | default "HTTP" }}
            initialDelaySeconds: {{ .initialDelaySeconds | default 30 }}
            periodSeconds: {{ .periodSeconds | default 30 }}
            timeoutSeconds: {{ .timeoutSeconds | default 1 }}
          {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.configMap.create }}
          volumeMounts:
            - name: {{ include "incident-bot.fullname" . }}-config
              mountPath: /config/{{ include "incident-bot.fullname" . }}
          {{- end }}
        {{- with .Values.extraContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- if .Values.configMap.create }}
      volumes:
        - name: {{ include "incident-bot.fullname" . }}-config
          configMap:
            name: {{ include "incident-bot.fullname" . }}-config
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
